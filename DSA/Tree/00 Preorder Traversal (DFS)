Preorder Traversal

         1
       /    \
      /      \
     2        3
    / \      / \
   /   \    /   \
  4     5  6     7 
 / \      /       \
8   9   10        11

Preorder - Root / Left/ Right
Preoerder Traversal - 1 2 4 8 9 5 3 6 10 7 11

class Node{
    int data;
    Node left;
    Node right;
    public TNode(){
    }
    public Node(int data, Node left, Node right){
        this.data = data;
        this.left = left;
        this.right = right;
    }
}

class Solution {
    // Recursive solution
    static ArrayList<Integer> preorder(Node root) {
        ArrayList<Integer> ar = new ArrayList<>();
        preorder1(root, ar);
        return ar;
        return ar;  
    }
    
    public static void preorder1(Node root, ArrayList<Integer> ar){
         if(root == null){
             return;
         }
         ar.add(root.data);
         preorder1(root.left, ar);
         preorder1(root.right, ar);
    }

     //Iterative solution
     static ArrayList<Integer> preorder(Node root) {
        ArrayList<Integer> ar = new ArrayList<>();
        if(root == null) return ar;
        Stack<Node> st = new Stack<Node>();
        st.push(root);
        while(!st.isEmpty()){
            root = st.pop();
            ar.add(root.data);
            if(root.right != null){
                st.push(root.right);
            }
            if(root.left != null){
                st.push(root.left);
            }
        }
        return ar;
    }
}
