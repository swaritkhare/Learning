Quick Revision Notes for Breadth-First Search (BFS)
  Overview
    Definition: BFS is an algorithm for traversing or searching tree or graph data structures level by level.
    Goal: Explore all neighbors at the current depth prior to moving on to nodes at the next depth level.
  Key Characteristics
    Data Structure: Utilizes a queue to track the nodes to be explored next.
    Traversal Order: Visits nodes in layers (level order traversal).
    Shortest Path: Finds the shortest path in an unweighted graph.
  Algorithm Steps
    Initialization: Start with a queue containing the starting node and a visited set.
    Process Loop: While the queue is not empty:
    Dequeue the front node.
    Process the node (e.g., print its value).
    For each unvisited neighbor, mark it as visited and enqueue it.
    End Condition: The process continues until all reachable nodes are explored.

  Space Complexity: O(b^d), where b is the branching factor and d is the depth of the shallowest goal node.
  Time Complexity: O(V+E) where V is the number of vertices and E is the number of edges.

Quick Revision Notes for Breadth-First Search (BFS)
